{"version":3,"sources":["file:///D:/cocos_work/SimulateCity/assets/src/component/building/BuildingOperateComp.ts"],"names":["_decorator","Component","Vec2","Input","input","v3","GlobalConst","v2_1","v2_2","v3_1","MsgEvent","Msg","Util","ccclass","property","BuildingOperateState","BuildingOperateComp","target","_longTouchTime","_state","NONE","_startTouchPoint","onLoad","targetEvent","getTarget","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","createSphere","node","parent","onDestroy","off","e","interruptBuildingOp","console","warn","touches","getAllTouches","_isSinglePoint","scheduleOnce","onLongTouch","LONG_TOUCH_CHECK","getLocation","LONG_TOUCH_RUNNING","mapPanel","getHitPointToGridPosition","setPosition","length","getDelta","lengthSqr","unschedule","SHORT_TOUCH_RUNNING","emit","OP_RESET_CLICK_POINT","OP_TOUCH_MOVE_MAP","OP_TOUCH_MOVE","set"],"mappings":"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","sourcesContent":["import { _decorator, Component, Quat, Vec2, Vec3, Input, game, EventTouch, EventMouse, input, EventKeyboard, KeyCode, v2, v3, Node } from 'cc';\r\nimport { GlobalConst, v2_1, v2_2, v3_1, v3_2 } from '../../GlobalConst';\r\nimport { MsgEvent } from '../../msg/MsgEvent';\r\nimport { Msg } from '../../msg/msg';\r\nimport { Util } from '../../framework/util';\r\nimport { MapOperateComp } from '../mapOp/MapOperateComp';\r\n\r\nconst { ccclass, property } = _decorator;\r\nenum BuildingOperateState {\r\n    NONE,\r\n    LONG_TOUCH_CHECK,\r\n    LONG_TOUCH_RUNNING,\r\n    SHORT_TOUCH_RUNNING,\r\n}\r\n\r\n@ccclass('BuildingOperateComp')\r\nexport class BuildingOperateComp extends Component {\r\n\r\n    private target: Node;\r\n    private _longTouchTime: number = 1;\r\n\r\n    private _state: BuildingOperateState = BuildingOperateState.NONE;\r\n    private _startTouchPoint: Vec2 = new Vec2();\r\n\r\n    public onLoad() {\r\n        const targetEvent = this.getTarget();\r\n        targetEvent.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        targetEvent.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        targetEvent.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        targetEvent.on(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n\r\n        this.target = Util.createSphere(this.node.parent, 1, v3())\r\n    }\r\n\r\n    public onDestroy() {\r\n        const targetEvent = this.getTarget();\r\n        targetEvent.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        targetEvent.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        targetEvent.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        targetEvent.off(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n\r\n    }\r\n\r\n\r\n    protected getTarget(): any {\r\n        return input;\r\n    }\r\n\r\n\r\n\r\n    public onTouchStart(e: EventTouch) {\r\n        if (GlobalConst.interruptBuildingOp) return console.warn(\"中断操作中...............\");\r\n        // if (game.canvas.requestPointerLock) { game.canvas.requestPointerLock(); }\r\n        const touches = e.getAllTouches();\r\n        if (this._isSinglePoint(e)) {\r\n            this.scheduleOnce(this.onLongTouch, this._longTouchTime);\r\n            this._state = BuildingOperateState.LONG_TOUCH_CHECK;\r\n            touches[0].getLocation(this._startTouchPoint);\r\n        }\r\n    }\r\n\r\n    onLongTouch() {\r\n        // 进入了拖动建筑物流程\r\n        this._state = BuildingOperateState.LONG_TOUCH_RUNNING;\r\n        GlobalConst.mapPanel.getHitPointToGridPosition(this._startTouchPoint, v3_1);\r\n        this.target.setPosition(v3_1);\r\n    }\r\n\r\n    private _isSinglePoint(e: EventTouch) {\r\n        return e.getAllTouches().length <= 1;\r\n    }\r\n\r\n    public onTouchMove(e: EventTouch) {\r\n        if (GlobalConst.interruptBuildingOp) return console.warn(\"中断操作中...............\");\r\n        const touches = e.getAllTouches();\r\n        if (this._isSinglePoint(e)) {\r\n\r\n            e.getDelta(v2_1);\r\n            if (this._state == BuildingOperateState.LONG_TOUCH_CHECK && v2_1.lengthSqr() > 100) {\r\n                this._state = BuildingOperateState.NONE;\r\n                this.unschedule(this.onLongTouch);\r\n            }\r\n            if (this._state == BuildingOperateState.LONG_TOUCH_RUNNING) {\r\n                touches[0]\r\n                GlobalConst.mapPanel.getHitPointToGridPosition(this._startTouchPoint, v3_1);\r\n                this.target.setPosition(v3_1);\r\n            }\r\n            if (this._state == BuildingOperateState.SHORT_TOUCH_RUNNING) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public onTouchEnd(e: EventTouch) {\r\n        this._state = BuildingOperateState.NONE;\r\n        if (GlobalConst.interruptBuildingOp) return console.warn(\"中断操作中...............\");\r\n        // if (document.exitPointerLock) { document.exitPointerLock(); }\r\n        const touches = e.getAllTouches();\r\n        // console.log(\"onTouchEnd:-->\" + touches.length);\r\n        if (touches.length >= 1) { // 重置记录触屏点，更新射线检测点，这样双指操作中抬起一个手指不会导致屏幕移动           \r\n            touches[0].getLocation(v2_2);\r\n            Msg.emit(MsgEvent.OP_RESET_CLICK_POINT, v2_2);\r\n            // Util.getScreenToWorld(v2_2, v3_2, lv);\r\n            Msg.emit(MsgEvent.OP_TOUCH_MOVE_MAP, v2_2);\r\n        }\r\n\r\n        // this._continueMoveDirty = true;\r\n        Msg.emit(MsgEvent.OP_TOUCH_MOVE, v2_1.set(0, 0));\r\n    }\r\n\r\n}"]}