{"version":3,"sources":["file:///D:/cocos_work/games/SimulateCity/assets/src/framework/tips.ts"],"names":["_decorator","Component","LabelComponent","Animation","PoolManager","ccclass","property","Tips","targetPos","_ani","onLoad","node","getComponent","start","show","content","callback","lbTips","string","on","EventType","FINISHED","instance","putNode","play"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,c,OAAAA,c;AAA6FC,MAAAA,S,OAAAA,S;;AAC1HC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;sBAGjBO,I,WADZF,OAAO,CAAC,MAAD,C,UAQHC,QAAQ,CAACJ,cAAD,C,2BARb,MACaK,IADb,SAC0BN,SAD1B,CACoC;AAAA;AAAA;;AAChC;AACA;;AAEA;AACA;AACA;AANgC;;AAAA,eAShCO,SATgC;AAAA,eAWxBC,IAXwB;AAAA;;AAYtBC,QAAAA,MAAM,GAAS;AACrB,eAAKD,IAAL,GAAY,KAAKE,IAAL,CAAUC,YAAV,CAAuBT,SAAvB,CAAZ;AACH;;AAEDU,QAAAA,KAAK,GAAG,CACJ;AACH;;AAEDC,QAAAA,IAAI,CAACC,OAAD,EAAkBC,QAAlB,EAAuC;AAEvC,eAAKC,MAAL,CAAYC,MAAZ,GAAqBH,OAArB;;AACA,eAAKN,IAAL,CAAUU,EAAV,CAAahB,SAAS,CAACiB,SAAV,CAAoBC,QAAjC,EAA2C,MAAM;AAE7C;AAAA;AAAA,4CAAYC,QAAZ,CAAqBC,OAArB,CAA6B,KAAKZ,IAAlC;AACAK,YAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACH,WAJD;;AAKA,eAAKP,IAAL,CAAUe,IAAV;AACH,SA7B+B,CA+BhC;AACA;AACA;;;AAjCgC,O;;;;;iBAQP,I","sourcesContent":["import { _decorator, Component, Node, LabelComponent, Vec3, tween, UITransform, Size, CCObject, isValid, UIOpacity, AnimationClip, Animation } from 'cc';\r\nimport { PoolManager } from './poolManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Tips')\r\nexport class Tips extends Component {\r\n    /* class member could be defined like this */\r\n    // dummy = '';\r\n\r\n    /* use `property` decorator if your want the member to be serializable */\r\n    // @property\r\n    // serializableDummy = 0;\r\n    @property(LabelComponent)\r\n    lbTips: LabelComponent = null!;\r\n    targetPos: any;\r\n\r\n    private _ani: Animation;\r\n    protected onLoad(): void {\r\n        this._ani = this.node.getComponent(Animation);\r\n    }\r\n\r\n    start() {\r\n        // Your initialization goes here.\r\n    }\r\n\r\n    show(content: string, callback?: Function) {\r\n\r\n        this.lbTips.string = content;\r\n        this._ani.on(Animation.EventType.FINISHED, () => {\r\n\r\n            PoolManager.instance.putNode(this.node);\r\n            callback && callback();\r\n        })\r\n        this._ani.play();\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // Your update function goes here.\r\n    // }\r\n}\r\n"]}