{"version":3,"sources":["file:///D:/cocos_work/games/SimulateCity/assets/src/component/OperateComp.ts"],"names":["_decorator","Component","Vec2","Input","input","KeyCode","v2","GlobalConst","Msg","MsgEvent","Util","Log","ccclass","property","v2_1","v2_2","v2_3","OperateComp","rotaWheelSpeed","touchDir","keys","key2dirMap","onLoad","on","EventType","MOUSE_WHEEL","onMouseWheel","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","e","interruptOp","console","warn","log","getScrollX","getScrollY","delta","touches","getAllTouches","length","getPreviousLocation","disPre","distance","subtract","preY","getDelta","y","curY","getLocation","disCur","angle","getAngleBetweenVectors","scale","rota","Math","min","max","set","emit","OP_TOUCH_SCALE","OP_TOUCH_ROTA","OP_TOUCH_MOVE","event","keyCode","KEY_A","KEY_S","KEY_D","KEY_W","indexOf","push","updateDirection","KEY_Q","cameraMoveDir","KEY_E","index","splice","keyCode0","keyCode1","dir","x","z"],"mappings":"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","sourcesContent":["import { _decorator, Component, Quat, Vec2, Vec3, Input, game, EventTouch, EventMouse, input, EventKeyboard, KeyCode, v2 } from 'cc';\r\nimport { GlobalConst } from '../GlobalConst';\r\nimport { Msg } from '../msg/msg';\r\nimport { MsgEvent } from '../msg/MsgEvent';\r\nimport { Util } from '../framework/util';\r\nimport { Log } from '../framework/Log';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst v2_1 = new Vec2();\r\nconst v2_2 = new Vec2();\r\nconst v2_3 = new Vec2();\r\n\r\n\r\n/**\r\n * \r\n11.双指缩放，旋转  同时触发 也就是说有距离移动就缩放，有方向变化就旋转\r\n\r\n1.建造物的拖拽\r\n2.从ui拖出一个建筑物\r\n3.建造物各种状态的实时切换，不能放置，等\r\n\r\n4.滑动和点击的区分，用于建造时是切换建造物的位置还是移动视野\r\n5.长按建造物触发建筑物位置切换操作\r\n6.点击ui触发ui事件\r\n7.如果建造物的ui是3d的ui是否可用于触摸点击  或者是2d的ui怎么处理变化\r\n8.产出物品的拾取\r\n9.建造物升级添加材料的操作\r\n10.建筑物的回收操作\r\n12.玩家不同的操作对于3d世界的影响，各种颜色变换滤镜等\r\n(1)可支持的3d场景面数，精细度\t\t\r\n(2)选中房屋拖动时 房屋类型的建筑物会保持原有颜色，其他地图物体变换成灰色 这块的处理规则那就是保持个类型建造的引用封装处理，也可以实现倒是\r\n(3)各种建筑物的状态，生产，还是定时开启等\r\n */\r\n\r\n@ccclass('OperateComp')\r\nexport class OperateComp extends Component {\r\n    \r\n    // 滚轮缩放的速度\r\n    rotaWheelSpeed: number = 0.1;\r\n\r\n\r\n    // 手指滑动方向\r\n    touchDir:Vec2 = new Vec2();\r\n    \r\n    public onLoad () {\r\n        input.on(Input.EventType.MOUSE_WHEEL, this.onMouseWheel, this);\r\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        input.on(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n\r\n\r\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n    public onDestroy () {\r\n        input.off(Input.EventType.MOUSE_WHEEL, this.onMouseWheel, this);\r\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        input.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        input.off(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n\r\n        input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n\r\n    \r\n    public onMouseWheel (e: EventMouse) {\r\n        if(GlobalConst.interruptOp) return console.warn(\"中断操作中...............\");\r\n        console.log(`滚轮滚动的参数 getScrollX：${e.getScrollX()}  getScrollY:${e.getScrollY()}`)\r\n        const delta = -e.getScrollY() * this.rotaWheelSpeed * 0.1; // delta is positive when scroll down\r\n\r\n        // // // 将数据放出去\r\n        // Vec3.transformQuat(v3_1, Vec3.UNIT_Z, this.node.rotation);\r\n        // Vec3.scaleAndAdd(this._position, this.node.position, v3_1, delta);\r\n    }\r\n    \r\n    public onTouchStart (e: EventTouch) {\r\n        console.log(\"ui  2d节点上的 触摸事件触发了  相机操作节点  --> TOUCH_START\")\r\n        if(GlobalConst.interruptOp) return console.warn(\"中断操作中...............\");\r\n        // if (game.canvas.requestPointerLock) { game.canvas.requestPointerLock(); }\r\n\r\n        const touches = e.getAllTouches();\r\n        if(touches.length > 1){\r\n\r\n        }else{\r\n            \r\n        }\r\n    }\r\n    \r\n    public onTouchMove (e: EventTouch) {\r\n        console.log(\"ui  2d节点上的 触摸事件触发了  相机操作节点  --> TOUCH_Move\")\r\n\r\n        if(GlobalConst.interruptOp) return console.warn(\"中断操作中...............\");\r\n        const touches = e.getAllTouches();\r\n        Log.log(\"on touch move:touches--->\",touches);\r\n        console.log(\"touches.length > 1\", touches.length > 1)\r\n        if(touches.length > 1){\r\n            touches[0].getPreviousLocation(v2_1);\r\n            touches[1].getPreviousLocation(v2_2);\r\n            let disPre = Vec2.distance(v2_1, v2_2);\r\n            Vec2.subtract(v2_3, v2_2, v2_1);\r\n            let preY = touches[0].getDelta(v2_2).y;\r\n            let curY = touches[1].getDelta(v2_1).y;\r\n            \r\n            touches[0].getLocation(v2_1);\r\n            touches[1].getLocation(v2_2);\r\n            let disCur = Vec2.distance(v2_1, v2_2);\r\n            Vec2.subtract(v2_2, v2_2, v2_1);\r\n            let angle = Util.getAngleBetweenVectors(v2_3, v2_2);// y轴旋转\r\n            \r\n            let scale = disCur - disPre;\r\n            let rota = 0;\r\n             if(curY > 0 && preY > 0){\r\n                rota = Math.min(curY, preY);\r\n            }else if(curY < 0 && preY < 0){\r\n                \r\n                rota = Math.max(curY, preY);\r\n             }\r\n\r\n            v2_2.set(rota, angle);\r\n            Msg.emit(MsgEvent.OP_TOUCH_SCALE, -scale);\r\n            Msg.emit(MsgEvent.OP_TOUCH_ROTA, v2_2);\r\n            Log.log(\"on touch move:touches---> \", scale, v2_2);\r\n        }else{\r\n            e.getDelta(v2_2);\r\n            v2_2.y *= -1;\r\n            Msg.emit(MsgEvent.OP_TOUCH_MOVE, v2_2);\r\n        }\r\n        // if (v2_1.x > game.canvas.width * 0.4) { // rotation\r\n        //     e.getDelta(v2_2);\r\n        //     this._eulerP.y -= v2_2.x * this.rotateSpeed * 0.1;\r\n        //     this._eulerP.x += v2_2.y * this.rotateSpeed * 0.1;\r\n        // } else { // position\r\n        //     e.getDelta(v2_2);\r\n        //     this._eulerP.y -= v2_2.x * this.rotateSpeed * 0.1;\r\n        //     this._eulerP.x += v2_2.y * this.rotateSpeed * 0.1;\r\n        // }\r\n    }\r\n\r\n    public onTouchEnd (e: EventTouch) {\r\n        console.log(\"ui  2d节点上的 触摸事件触发了  相机操作节点  --> TOUCH_END\")\r\n\r\n        if(GlobalConst.interruptOp) return console.warn(\"中断操作中...............\");\r\n        // if (document.exitPointerLock) { document.exitPointerLock(); }\r\n        const touches = e.getAllTouches();\r\n        if(touches.length <= 1){\r\n            Msg.emit(MsgEvent.OP_TOUCH_MOVE, v2_1.set(0,0));\r\n        }\r\n    }\r\n\r\n    private keys = [];\r\n    // x  -1 left, +1 right   y -1 backword, +1 forward\r\n    \r\n    onKeyDown(event:EventKeyboard){\r\n        if(GlobalConst.interruptOp) return console.warn(\"中断操作中...............\");\r\n\r\n        let keyCode = event.keyCode;\r\n        if(keyCode == KeyCode.KEY_A || keyCode == KeyCode.KEY_S || keyCode == KeyCode.KEY_D || keyCode == KeyCode.KEY_W){\r\n            if(this.keys.indexOf(keyCode) == -1){\r\n                this.keys.push(keyCode);\r\n                this.updateDirection();\r\n            }\r\n        }\r\n        if(keyCode == KeyCode.KEY_Q){\r\n            GlobalConst.cameraMoveDir.y = -1;\r\n        }\r\n        else if(keyCode == KeyCode.KEY_E){\r\n            GlobalConst.cameraMoveDir.y = 1;\r\n        }\r\n    }\r\n\r\n    onKeyUp(event:EventKeyboard){\r\n        if(GlobalConst.interruptOp) return console.warn(\"中断操作中...............\");\r\n\r\n        let keyCode = event.keyCode;\r\n        if(keyCode == KeyCode.KEY_A || keyCode == KeyCode.KEY_S || keyCode == KeyCode.KEY_D || keyCode == KeyCode.KEY_W){\r\n            let index = this.keys.indexOf(keyCode);\r\n            if(index != -1){\r\n                this.keys.splice(index,1);\r\n                this.updateDirection();\r\n            }\r\n        }\r\n\r\n        if(keyCode == KeyCode.KEY_Q || keyCode == KeyCode.KEY_E){\r\n            GlobalConst.cameraMoveDir.y = 0;\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    \r\n    private key2dirMap = null;\r\n\r\n    updateDirection(){\r\n        if(this.key2dirMap == null){\r\n            this.key2dirMap = {};\r\n            this.key2dirMap[0] = v2(0,0);\r\n            this.key2dirMap[KeyCode.KEY_A] = v2(-1,0);\r\n            this.key2dirMap[KeyCode.KEY_D] = v2(1,0);\r\n            this.key2dirMap[KeyCode.KEY_W] = v2(0,1);\r\n            this.key2dirMap[KeyCode.KEY_S] = v2(0,-1);\r\n\r\n            this.key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_W] = this.key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_A] = v2(-1,1);\r\n            this.key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_W] = this.key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_D] = v2(1,1);\r\n            this.key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_S] = this.key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_A] = v2(-1,-1);\r\n            this.key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_S] = this.key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_D] = v2(1,-1);\r\n\r\n            this.key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_D] = this.key2dirMap[KeyCode.KEY_D];\r\n            this.key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_A] = this.key2dirMap[KeyCode.KEY_A];\r\n            this.key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_S] = this.key2dirMap[KeyCode.KEY_S];\r\n            this.key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_W] = this.key2dirMap[KeyCode.KEY_W];\r\n        }\r\n        let keyCode0 = this.keys[this.keys.length - 1] || 0;\r\n        let keyCode1 = this.keys[this.keys.length - 2] || 0;\r\n        let dir = this.key2dirMap[keyCode1 * 1000 + keyCode0];\r\n        GlobalConst.cameraMoveDir.x = dir.x;\r\n        GlobalConst.cameraMoveDir.z = dir.y;\r\n    }\r\n}\r\n"]}