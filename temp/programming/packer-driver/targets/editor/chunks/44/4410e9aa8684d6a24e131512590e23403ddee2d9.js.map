{"version":3,"sources":["file:///D:/cocos_work/SimulateCity/assets/src/framework/util.ts"],"names":["_decorator","builtinResMgr","Material","MeshRenderer","misc","Node","Primitive","tween","v3","Vec2","GlobalConst","ccclass","property","tmpV3","material","mat","_uuid","initialize","effectName","defines","USE_TEXTURE","USE_INSTANCING","whiteTexture","get","setProperty","Util","clone","sObj","s","constructor","Array","i","hasOwnProperty","objectToArray","srcObj","resultArr","key","push","arrayToObject","objectKey","resultObj","getWeightRandIndex","weightArr","totalWeight","randWeight","Math","floor","random","sum","weightIndex","length","getRandomNFromM","n","m","array","intRd","count","getRandomInt","flag","min","max","r","rr","getStringLength","render","strArr","len","val","charCodeAt","ceil","isEmptyObject","obj","result","Object","isNewDay","dateValue","oldDate","Date","curDate","oldYear","getYear","oldMonth","getMonth","oldDay","getDate","curYear","curMonth","curDay","getPropertyCount","o","difference","diff","indexOf","_stringToArray","string","rsAstralRange","rsZWJ","rsVarRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","reHasUnicode","RegExp","rsFitz","rsOptVar","rsCombo","rsModifier","reOptMod","rsAstral","rsNonAstral","rsRegional","rsSurrPair","rsOptJoin","join","rsSeq","rsSymbol","reUnicode","hasUnicode","test","unicodeToArray","match","asciiToArray","split","simulationUUID","s4","toString","substring","trim","str","replace","isNowValid","start","end","startTime","endTime","String","getDeltaDays","startYear","getFullYear","startMonth","startDate","endYear","endMonth","endDate","getTime","deltaTime","getMin","Number","formatTwoDigits","time","slice","formatDate","date","fmt","getHours","getMinutes","getSeconds","getMilliseconds","$1","substr","k","getDay","formatName","name","limit","nameArray","formatMoney","money","arrUnit","strValue","idx","formatValue","value","fromCharCode","formatTimeForSecond","leftSec","withoutSeconds","timeStr","sec","leftMin","hour","formatTimeForMillisecond","ms","second","minute","rand","arr","arrClone","randomIndex","itemIndex","getOffsetMimutes","offSetTime","formatNumToFixed","num","toFixed","lerp","targetValue","curValue","ratio","v","decrypt","b64Data","decodeData","_base64Decode","encrypt","_base64encode","encodeData","input","keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","_utf8Encode","isNaN","charAt","utftext","c","_utf8Decode","c1","c2","c3","checkIsLowPhone","wx","window","nowBenchmarkLevel","sys","getSystemInfoSync","isIOS","system","model","ultraLowPhoneType","lowPhoneType","middlePhoneType","highPhoneType","benchmarkLevel","showLabelTween","label","cb","disy","node","getPosition","targetX","x","targetY","y","delayTime","setScale","position","to","onUpdate","target","easing","call","scale","delay","getAngleBetweenVectors","vectorA","vectorB","dotProduct","dot","magnitudeA","magnitudeB","cosTheta","angleRad","acos","angleDeg","radiansToDegrees","getAngleXVectors","UNIT_X","getScreenToWorld","vec2","vec3","lv","set","camera","screenToWorld","calculateHitPoint","out","mapPanel","createSphere","parent","radius","pos","setPosition","mesh","PrimitiveType","SPHERE","info","onLoaded","meshRender","addComponent","layer"],"mappings":"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","sourcesContent":["import { _decorator, builtinResMgr, Color, Component, geometry, Label, Material, MeshRenderer, misc, Node, Primitive, Texture2D, tween, v3, Vec2, Vec3 } from \"cc\";\r\nimport { v3_2, v3_1, GlobalConst, ray } from \"../GlobalConst\";\r\nimport { CameraControllerComp } from \"../component/mapOp/CameraControllerComp\";\r\nconst { ccclass, property } = _decorator;\r\nconst tmpV3 = v3();\r\n\r\nconst material = new Material();\r\n((mat:Material) => {\r\n\r\n    mat._uuid = \"TestSphere01\";\r\n    mat.initialize({\r\n        effectName: 'builtin-unlit',\r\n        defines: {\r\n            USE_TEXTURE: true,\r\n            USE_INSTANCING: true\r\n        },\r\n    });\r\n    const whiteTexture = builtinResMgr.get<Texture2D>('white-texture');\r\n    mat.setProperty(\"mainTexture\", whiteTexture, 0);\r\n})(material)\r\n\r\n@ccclass(\"Util\")\r\nexport class Util {\r\n    /**\r\n     * !#zh 拷贝object。\r\n     */\r\n    /**\r\n     * 深度拷贝\r\n     * @param {any} sObj 拷贝的对象\r\n     * @returns\r\n     */\r\n    public static clone(sObj: any) {\r\n        if (sObj === null || typeof sObj !== \"object\") {\r\n            return sObj;\r\n        }\r\n\r\n        let s: { [key: string]: any } = {};\r\n        if (sObj.constructor === Array) {\r\n            s = [];\r\n        }\r\n\r\n        for (let i in sObj) {\r\n            if (sObj.hasOwnProperty(i)) {\r\n                s[i] = this.clone(sObj[i]);\r\n            }\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    /**\r\n     * 将object转化为数组\r\n     * @param { any} srcObj\r\n     * @returns\r\n     */\r\n    public static objectToArray(srcObj: { [key: string]: any }) {\r\n\r\n        let resultArr: any[] = [];\r\n\r\n        // to array\r\n        for (let key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            resultArr.push(srcObj[key]);\r\n        }\r\n\r\n        return resultArr;\r\n    }\r\n\r\n    /**\r\n     * !#zh 将数组转化为object。\r\n     */\r\n    /**\r\n     * 将数组转化为object。\r\n     * @param { any} srcObj\r\n     * @param { string} objectKey\r\n     * @returns\r\n     */\r\n    public static arrayToObject(srcObj: any, objectKey: string) {\r\n\r\n        let resultObj: { [key: string]: any } = {};\r\n\r\n        // to object\r\n        for (let key in srcObj) {\r\n            if (!srcObj.hasOwnProperty(key) || !srcObj[key][objectKey]) {\r\n                continue;\r\n            }\r\n\r\n            resultObj[srcObj[key][objectKey]] = srcObj[key];\r\n        }\r\n\r\n        return resultObj;\r\n    }\r\n\r\n    /**\r\n     * 根据权重,计算随机内容\r\n     * @param {arrany} weightArr\r\n     * @param {number} totalWeight 权重\r\n     * @returns\r\n     */\r\n    public static getWeightRandIndex(weightArr: [], totalWeight: number) {\r\n        let randWeight: number = Math.floor(Math.random() * totalWeight);\r\n        let sum: number = 0;\r\n        for (var weightIndex: number = 0; weightIndex < weightArr.length; weightIndex++) {\r\n            sum += weightArr[weightIndex];\r\n            if (randWeight < sum) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return weightIndex;\r\n    }\r\n\r\n    /**\r\n     * 从n个数中获取m个随机数\r\n     * @param {Number} n   总数\r\n     * @param {Number} m    获取数\r\n     * @returns {Array} array   获取数列\r\n     */\r\n    public static getRandomNFromM(n: number, m: number) {\r\n        let array: any[] = [];\r\n        let intRd: number = 0;\r\n        let count: number = 0;\r\n\r\n        while (count < m) {\r\n            if (count >= n + 1) {\r\n                break;\r\n            }\r\n\r\n            intRd = this.getRandomInt(0, n);\r\n            let flag = 0;\r\n            for (let i = 0; i < count; i++) {\r\n                if (array[i] === intRd) {\r\n                    flag = 1;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (flag === 0) {\r\n                array[count] = intRd;\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * 获取随机整数\r\n     * @param {Number} min 最小值\r\n     * @param {Number} max 最大值\r\n     * @returns\r\n     */\r\n    public static getRandomInt(min: number, max: number) {\r\n        let r: number = Math.random();\r\n        let rr: number = r * (max - min + 1) + min;\r\n        return Math.floor(rr);\r\n    }\r\n\r\n    /**\r\n     * 获取字符串长度\r\n     * @param {string} render\r\n     * @returns\r\n     */\r\n    public static getStringLength(render: string) {\r\n        let strArr: string = render;\r\n        let len: number = 0;\r\n        for (let i: number = 0, n = strArr.length; i < n; i++) {\r\n            let val: number = strArr.charCodeAt(i);\r\n            if (val <= 255) {\r\n                len = len + 1;\r\n            } else {\r\n                len = len + 2;\r\n            }\r\n        }\r\n\r\n        return Math.ceil(len / 2);\r\n    }\r\n\r\n    /**\r\n     * 判断传入的参数是否为空的Object。数组或undefined会返回false\r\n     * @param obj\r\n     */\r\n    public static isEmptyObject(obj: any) {\r\n        let result: boolean = true;\r\n        if (obj && obj.constructor === Object) {\r\n            for (let key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 判断是否是新的一天\r\n     * @param {Object|Number} dateValue 时间对象 todo MessageCenter 与 pve 相关的时间存储建议改为 Date 类型\r\n     * @returns {boolean}\r\n     */\r\n    public static isNewDay(dateValue: any) {\r\n        // todo：是否需要判断时区？\r\n        let oldDate: any = new Date(dateValue);\r\n        let curDate: any = new Date();\r\n\r\n        let oldYear = oldDate.getYear();\r\n        let oldMonth = oldDate.getMonth();\r\n        let oldDay = oldDate.getDate();\r\n        let curYear = curDate.getYear();\r\n        let curMonth = curDate.getMonth();\r\n        let curDay = curDate.getDate();\r\n\r\n        if (curYear > oldYear) {\r\n            return true;\r\n        } else {\r\n            if (curMonth > oldMonth) {\r\n                return true;\r\n            } else {\r\n                if (curDay > oldDay) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取对象属性数量\r\n     * @param {object}o 对象\r\n     * @returns\r\n     */\r\n    public static getPropertyCount(o: Object) {\r\n        let n; let\r\n            count = 0;\r\n        for (n in o) {\r\n            if (o.hasOwnProperty(n)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * 返回一个差异化数组（将array中diff里的值去掉）\r\n     * @param array\r\n     * @param diff\r\n     */\r\n    public static difference(array: [], diff: any) {\r\n        let result: any[] = [];\r\n        if (array.constructor !== Array || diff.constructor !== Array) {\r\n            return result;\r\n        }\r\n\r\n        let length = array.length;\r\n        for (let i: number = 0; i < length; i++) {\r\n            if (diff.indexOf(array[i]) === -1) {\r\n                result.push(array[i]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    public static _stringToArray(string: string) {\r\n        // 用于判断emoji的正则们\r\n        let rsAstralRange = '\\\\ud800-\\\\udfff';\r\n        let rsZWJ = '\\\\u200d';\r\n        let rsVarRange = '\\\\ufe0e\\\\ufe0f';\r\n        let rsComboMarksRange = '\\\\u0300-\\\\u036f';\r\n        let reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\r\n        let rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\r\n        let rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\r\n        let reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');\r\n\r\n        let rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\r\n        let rsOptVar = '[' + rsVarRange + ']?';\r\n        let rsCombo = '[' + rsComboRange + ']';\r\n        let rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\r\n        let reOptMod = rsModifier + '?';\r\n        let rsAstral = '[' + rsAstralRange + ']';\r\n        let rsNonAstral = '[^' + rsAstralRange + ']';\r\n        let rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\r\n        let rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\r\n        let rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\r\n        let rsSeq = rsOptVar + reOptMod + rsOptJoin;\r\n        let rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\r\n        let reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\r\n\r\n        let hasUnicode = function (val: string) {\r\n            return reHasUnicode.test(val);\r\n        };\r\n\r\n        let unicodeToArray = function (val: string) {\r\n            return val.match(reUnicode) || [];\r\n        };\r\n\r\n        let asciiToArray = function (val: string) {\r\n            return val.split('');\r\n        };\r\n\r\n        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\r\n    }\r\n\r\n    // 模拟传msg的uuid\r\n    public static simulationUUID() {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        }\r\n\r\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n            s4() + '-' + s4() + s4() + s4();\r\n    }\r\n\r\n    public static trim(str: string) {\r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    }\r\n\r\n    /**\r\n     * 判断当前时间是否在有效时间内\r\n     * @param {String|Number} start 起始时间。带有时区信息\r\n     * @param {String|Number} end 结束时间。带有时区信息\r\n     */\r\n    public static isNowValid(start: string | number, end: string | number) {\r\n        let startTime = new Date(start);\r\n        let endTime = new Date(end);\r\n        let result = false;\r\n\r\n        if (String(startTime.getDate()) !== 'NaN' && String(endTime.getDate()) !== 'NaN') {\r\n            let curDate = new Date();\r\n            result = curDate < endTime && curDate > startTime;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 返回相隔天数\r\n     * @param start\r\n     * @param end\r\n     * @returns\r\n     */\r\n    public static getDeltaDays(start: any, end: any) {\r\n        start = new Date(start);\r\n        end = new Date(end);\r\n\r\n        let startYear: number = start.getFullYear();\r\n        let startMonth: number = start.getMonth() + 1;\r\n        let startDate: number = start.getDate();\r\n        let endYear: number = end.getFullYear();\r\n        let endMonth: number = end.getMonth() + 1;\r\n        let endDate: number = end.getDate();\r\n\r\n        start = new Date(startYear + '/' + startMonth + '/' + startDate + ' GMT+0800').getTime();\r\n        end = new Date(endYear + '/' + endMonth + '/' + endDate + ' GMT+0800').getTime();\r\n\r\n        let deltaTime = end - start;\r\n        return Math.floor(deltaTime / (24 * 60 * 60 * 1000));\r\n    }\r\n\r\n    /**\r\n     * 获取数组最小值\r\n     * @param array 数组\r\n     * @returns\r\n     */\r\n    public static getMin(array: number[]) {\r\n        let result: number = null!;\r\n        if (array.constructor === Array) {\r\n            let length = array.length;\r\n            for (let i = 0; i < length; i++) {\r\n                if (i === 0) {\r\n                    result = Number(array[0]);\r\n                } else {\r\n                    result = result > Number(array[i]) ? Number(array[i]) : result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 格式化两位小数点\r\n     * @param time\r\n     * @returns\r\n     */\r\n    public static formatTwoDigits(time: number) {\r\n        // @ts-ignore\r\n        return (Array(2).join(0) + time).slice(-2);\r\n    }\r\n\r\n    /**\r\n     * 根据格式返回时间\r\n     * @param date  时间\r\n     * @param fmt 格式\r\n     * @returns\r\n     */\r\n    public static formatDate(date: Date, fmt: string) {\r\n        let o = {\r\n            \"M+\": date.getMonth() + 1, // 月份\r\n            \"d+\": date.getDate(), // 日\r\n            \"h+\": date.getHours(), // 小时\r\n            \"m+\": date.getMinutes(), // 分\r\n            \"s+\": date.getSeconds(), // 秒\r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\r\n            \"S\": date.getMilliseconds() // 毫秒\r\n        };\r\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (String(date.getFullYear())).substr(4 - RegExp.$1.length));\r\n        for (let k in o) { if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((String(o[k])).length))); }\r\n        return fmt;\r\n    }\r\n\r\n    /**\r\n     * 获取格式化后的日期（不含小时分秒）\r\n     */\r\n    public static getDay() {\r\n        let date: Date = new Date();\r\n\r\n        return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n    }\r\n\r\n    /**\r\n     * 格式化名字，XXX...\r\n     * @param {string} name 需要格式化的字符串\r\n     * @param {number}limit\r\n     * @returns {string} 返回格式化后的字符串XXX...\r\n     */\r\n    public static formatName(name: string, limit: number) {\r\n        limit = limit || 6;\r\n        let nameArray = this._stringToArray(name);\r\n        let str = '';\r\n        let length = nameArray.length;\r\n        if (length > limit) {\r\n            for (let i = 0; i < limit; i++) {\r\n                str += nameArray[i];\r\n            }\r\n\r\n            str += '...';\r\n        } else {\r\n            str = name;\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 格式化钱数，超过10000 转换位 10K   10000K 转换为 10M\r\n     * @param {number}money 需要被格式化的数值\r\n     * @returns {string}返回 被格式化的数值\r\n     */\r\n    public static formatMoney(money: number) {\r\n        let arrUnit: string[] = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'B', 'N', 'D'];\r\n\r\n        let strValue: string = '';\r\n        for (let idx: number = 0; idx < arrUnit.length; idx++) {\r\n            if (money >= 10000) {\r\n                money /= 1000;\r\n            } else {\r\n                strValue = Math.floor(money) + arrUnit[idx];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (strValue === '') {\r\n            strValue = Math.floor(money) + 'U'; // 超过最大值就加个U\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    /**\r\n     * 格式化数值\r\n     * @param {number}value 需要被格式化的数值\r\n     * @returns {string}返回 被格式化的数值\r\n     */\r\n    public static formatValue(value: number) {\r\n        let arrUnit: string[] = [];\r\n        let strValue: string = '';\r\n        for (let i = 0; i < 26; i++) {\r\n            arrUnit.push(String.fromCharCode(97 + i));\r\n        }\r\n\r\n        for (let idx: number = 0; idx < arrUnit.length; idx++) {\r\n            if (value >= 10000) {\r\n                value /= 1000;\r\n            } else {\r\n                strValue = Math.floor(value) + arrUnit[idx];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    /**\r\n     * 根据剩余秒数格式化剩余时间 返回 HH:MM:SS\r\n     * @param {Number} leftSec\r\n     */\r\n    public static formatTimeForSecond(leftSec: number, withoutSeconds: boolean = false) {\r\n        let timeStr: string = '';\r\n        let sec: number = leftSec % 60;\r\n\r\n        let leftMin: number = Math.floor(leftSec / 60);\r\n        leftMin = leftMin < 0 ? 0 : leftMin;\r\n\r\n        let hour: number = Math.floor(leftMin / 60);\r\n        let min: number = leftMin % 60;\r\n\r\n        if (hour > 0) {\r\n            timeStr += hour > 9 ? hour.toString() : '0' + hour;\r\n            timeStr += ':';\r\n        } else {\r\n            timeStr += '00:';\r\n        }\r\n\r\n        timeStr += min > 9 ? min.toString() : '0' + min;\r\n\r\n        if (!withoutSeconds) {\r\n            timeStr += ':';\r\n            timeStr += sec > 9 ? sec.toString() : '0' + sec;\r\n        }\r\n\r\n        return timeStr;\r\n    }\r\n\r\n    /**\r\n     *  根据剩余毫秒数格式化剩余时间 返回 HH:MM:SS\r\n     *\r\n     * @param {Number} ms\r\n     */\r\n    public static formatTimeForMillisecond(ms: number): Object {\r\n        let second: number = Math.floor(ms / 1000 % 60);\r\n        let minute: number = Math.floor(ms / 1000 / 60 % 60);\r\n        let hour: number = Math.floor(ms / 1000 / 60 / 60);\r\n        return { 'hour': hour, 'minute': minute, 'second': second };\r\n    }\r\n\r\n    /**\r\n     * 将数组内容进行随机排列\r\n     * @param {Array}arr 需要被随机的数组\r\n     * @returns\r\n     */\r\n    public static rand(arr: []): [] {\r\n        let arrClone = this.clone(arr);\r\n        // 首先从最大的数开始遍历，之后递减\r\n        for (let i: number = arrClone.length - 1; i >= 0; i--) {\r\n            // 随机索引值randomIndex是从0-arrClone.length中随机抽取的\r\n            const randomIndex: number = Math.floor(Math.random() * (i + 1));\r\n            // 下面三句相当于把从数组中随机抽取到的值与当前遍历的值互换位置\r\n            const itemIndex: number = arrClone[randomIndex];\r\n            arrClone[randomIndex] = arrClone[i];\r\n            arrClone[i] = itemIndex;\r\n        }\r\n        // 每一次的遍历都相当于把从数组中随机抽取（不重复）的一个元素放到数组的最后面（索引顺序为：len-1,len-2,len-3......0）\r\n        return arrClone;\r\n    }\r\n\r\n    /**\r\n     * 获得开始和结束两者之间相隔分钟数\r\n     *\r\n     * @static\r\n     * @param {number} start\r\n     * @param {number} end\r\n     * @memberof Util\r\n     */\r\n    public static getOffsetMimutes(start: number, end: number) {\r\n        let offSetTime: number = end - start;\r\n        let minute: number = Math.floor((offSetTime % (1000 * 60 * 60)) / (1000 * 60));\r\n        return minute;\r\n    }\r\n\r\n    /**\r\n     * 返回指定小数位的数值\r\n     * @param {number} num\r\n     * @param {number} idx\r\n     */\r\n    public static formatNumToFixed(num: number, idx: number = 0) {\r\n        return Number(num.toFixed(idx));\r\n    }\r\n\r\n    /**\r\n     * 用于数值到达另外一个目标数值之间进行平滑过渡运动效果\r\n     * @param {number} targetValue 目标数值\r\n     * @param {number} curValue 当前数值\r\n     * @param {number} ratio    过渡比率\r\n     * @returns\r\n     */\r\n    public static lerp(targetValue: number, curValue: number, ratio: number = 0.25) {\r\n        let v: number = curValue;\r\n        if (targetValue > curValue) {\r\n            v = curValue + (targetValue - curValue) * ratio;\r\n        } else if (targetValue < curValue) {\r\n            v = curValue - (curValue - targetValue) * ratio;\r\n        }\r\n\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 数据解密\r\n     * @param {String} str\r\n     */\r\n    public static decrypt(b64Data: string) {\r\n        let n: number = 6;\r\n        if (b64Data.length % 2 === 0) {\r\n            n = 7;\r\n        }\r\n\r\n        let decodeData = '';\r\n        for (let idx = 0; idx < b64Data.length - n; idx += 2) {\r\n            decodeData += b64Data[idx + 1];\r\n            decodeData += b64Data[idx];\r\n        }\r\n\r\n        decodeData += b64Data.slice(b64Data.length - n + 1);\r\n\r\n        decodeData = this._base64Decode(decodeData);\r\n\r\n        return decodeData;\r\n    }\r\n\r\n    /**\r\n * 数据加密\r\n * @param {String} str\r\n */\r\n    public static encrypt(str: string) {\r\n        let b64Data = this._base64encode(str);\r\n\r\n        let n: number = 6;\r\n        if (b64Data.length % 2 === 0) {\r\n            n = 7;\r\n        }\r\n\r\n        let encodeData: string = '';\r\n\r\n        for (let idx = 0; idx < (b64Data.length - n + 1) / 2; idx++) {\r\n            encodeData += b64Data[2 * idx + 1];\r\n            encodeData += b64Data[2 * idx];\r\n        }\r\n\r\n        encodeData += b64Data.slice(b64Data.length - n + 1);\r\n\r\n        return encodeData;\r\n    }\r\n\r\n    // public method for encoding\r\n    /**\r\n     * base64加密\r\n     * @param {string}input\r\n     * @returns\r\n     */\r\n    private static _base64encode(input: string) {\r\n        let keyStr: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        let output: string = \"\"; let chr1: number; let chr2: number; let chr3: number; let enc1: number; let enc2: number; let enc3: number; let enc4: number; let\r\n            i: number = 0;\r\n        input = this._utf8Encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output +\r\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * utf-8 加密\r\n     * @param string\r\n     * @returns\r\n     */\r\n    private static _utf8Encode(string: string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        let utftext: string = \"\";\r\n        for (let n: number = 0; n < string.length; n++) {\r\n            let c: number = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n    /**\r\n     * utf-8解密\r\n     * @param utftext\r\n     * @returns\r\n     */\r\n    private static _utf8Decode(utftext: string) {\r\n        let string = \"\";\r\n        let i: number = 0;\r\n        let c: number = 0;\r\n        let c1: number = 0;\r\n        let c2: number = 0;\r\n        let c3: number = 0;\r\n        while (i < utftext.length) {\r\n            c = utftext.charCodeAt(i);\r\n            if (c < 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            } else if ((c > 191) && (c < 224)) {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            } else {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                c3 = utftext.charCodeAt(i + 2);\r\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return string;\r\n    }\r\n\r\n    /**\r\n     * base64解密\r\n     * @param {string}input 解密字符串\r\n     * @returns\r\n     */\r\n    private static _base64Decode(input: string) {\r\n        let keyStr: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        let output: string = \"\";\r\n        let chr1: number;\r\n        let chr2: number;\r\n        let chr3: number;\r\n        let enc1: number;\r\n        let enc2: number;\r\n        let enc3: number;\r\n        let enc4: number;\r\n        let i: number = 0;\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n        while (i < input.length) {\r\n            enc1 = keyStr.indexOf(input.charAt(i++));\r\n            enc2 = keyStr.indexOf(input.charAt(i++));\r\n            enc3 = keyStr.indexOf(input.charAt(i++));\r\n            enc4 = keyStr.indexOf(input.charAt(i++));\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n            output = output + String.fromCharCode(chr1);\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n        }\r\n        output = this._utf8Decode(output);\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * 获取当前机型性能是否为低端机\r\n     */\r\n    public static checkIsLowPhone(): Boolean {\r\n        //@ts-ignore\r\n        const wx = window.wx;\r\n        if (wx) {\r\n            // 微信性能数值参考:https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-benchmarkLevel.html\r\n\r\n            let nowBenchmarkLevel: number = -1; // nowBenchmarkLevel = -1性能未知\r\n            const sys = wx.getSystemInfoSync();\r\n            const isIOS = sys.system.indexOf('iOS') >= 0;\r\n            if (isIOS) {\r\n                // 微信不支持IO性能等级\r\n                const model = sys.model;\r\n                // iPhone 5s 及以下 设定为超低端机\r\n                const ultraLowPhoneType = ['iPhone1,1', 'iPhone1,2', 'iPhone2,1', 'iPhone3,1', 'iPhone3,3', 'iPhone4,1', 'iPhone5,1', 'iPhone5,2', 'iPhone5,3', 'iPhone5,4', 'iPhone6,1', 'iPhone6,2'];\r\n                // iPhone 6 ~ iPhone SE 设定为超低端机\r\n                const lowPhoneType = ['iPhone6,2', 'iPhone7,1', 'iPhone7,2', 'iPhone8,1', 'iPhone8,2', 'iPhone8,4'];\r\n                // iPhone 7 ~ iPhone X 设定为中端机\r\n                const middlePhoneType = ['iPhone9,1', 'iPhone9,2', 'iPhone9,3', 'iPhone9,4', 'iPhone10,1', 'iPhone10,2', 'iPhone10,3', 'iPhone10,4', 'iPhone10,5', 'iPhone10,6', 'iPhone XS'];\r\n                // iPhone XS 及以上 设定为高端机\r\n                const highPhoneType = ['iPhone11,2', 'iPhone11,4', 'iPhone11,6', 'iPhone11,8', 'iPhone12,1', 'iPhone12,3', 'iPhone12,5', 'iPhone12,8', 'iPhone13 ', 'iPhone 14'];\r\n                for (let i = 0; i < ultraLowPhoneType.length; i++) {\r\n                    if (model.indexOf(ultraLowPhoneType[i]) >= 0) { nowBenchmarkLevel = 5 }\r\n                }\r\n                for (let i = 0; i < lowPhoneType.length; i++) {\r\n                    if (model.indexOf(lowPhoneType[i]) >= 0) { nowBenchmarkLevel = 10 }\r\n                }\r\n                for (let i = 0; i < middlePhoneType.length; i++) {\r\n                    if (model.indexOf(middlePhoneType[i]) >= 0) { nowBenchmarkLevel = 20 }\r\n                }\r\n                for (let i = 0; i < highPhoneType.length; i++) {\r\n                    if (model.indexOf(highPhoneType[i]) >= 0) { nowBenchmarkLevel = 30 }\r\n                }\r\n            } else {\r\n                nowBenchmarkLevel = sys.benchmarkLevel;\r\n            }\r\n\r\n            if (nowBenchmarkLevel < 22) { // 22的具体参数可参考微信官方\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public static showLabelTween(label: Label, time: number, cb: Function, disy: number = 50) {\r\n        let node = label.node;\r\n        node.getPosition(tmpV3);\r\n        let targetX = tmpV3.x + (Math.random() - 0.5) * disy / 2;\r\n        let targetY = tmpV3.y + disy;\r\n        let delayTime = Math.min(time / 3, 0.2);\r\n        node.setScale(0.1, 0.1);\r\n        tween(node.position).to(time, { x: targetX, y: targetY }, {\r\n            onUpdate: (target: Vec3, ratio: number) => {\r\n                node.position = target;\r\n            },\r\n            easing: \"cubicInOut\"\r\n        }).call(cb).start();\r\n\r\n        tween(node.scale).delay(delayTime).to(time - delayTime, { x: 2, y: 2 }, {\r\n            onUpdate: (target: Vec3, ratio: number) => {\r\n                node.scale = target;\r\n            },\r\n            easing: \"cubicInOut\" //TODO EFF 可以有更好的效果\r\n        }).start();\r\n\r\n\r\n        // tween(label.color).delay(delayTime).to(time - delayTime, { a: 0 }, {\r\n        //     onUpdate: (target: Color, ratio: number) => {\r\n        //         label.color = target;\r\n        //     }\r\n        // }).start();\r\n\r\n    }\r\n\r\n\r\n    // 计算向量夹角的函数\r\n    static getAngleBetweenVectors(vectorA: Vec2, vectorB: Vec2) {\r\n        // 使用向量的点积和模长计算夹角的余弦值\r\n        const dotProduct = Vec2.dot(vectorA, vectorB);\r\n        const magnitudeA = vectorA.length();\r\n        const magnitudeB = vectorB.length();\r\n\r\n        // 计算余弦值\r\n        const cosTheta = dotProduct / (magnitudeA * magnitudeB);\r\n\r\n        // 使用反余弦函数获取角度（弧度）\r\n        let angleRad = Math.acos(cosTheta);\r\n\r\n        // 将弧度转换为角度\r\n        let angleDeg = misc.radiansToDegrees(angleRad);\r\n\r\n        return angleDeg;\r\n    }\r\n\r\n    // 计算向量夹角的函数\r\n    static getAngleXVectors(vectorA: Vec2) {\r\n        // 使用向量的点积和模长计算夹角的余弦值\r\n        let vectorB = Vec2.UNIT_X;\r\n        const dotProduct = Vec2.dot(vectorA, vectorB);\r\n        const magnitudeA = vectorA.length();\r\n\r\n        // 计算余弦值\r\n        const cosTheta = dotProduct / magnitudeA;\r\n\r\n        // 使用反余弦函数获取角度（弧度）\r\n        let angleRad = Math.acos(cosTheta);\r\n\r\n        // 将弧度转换为角度\r\n        let angleDeg = misc.radiansToDegrees(angleRad);\r\n\r\n        return angleDeg;\r\n    }\r\n\r\n    /**\r\n     * 获取屏幕到空间坐标的转换\r\n     * @param vec2 \r\n     * @returns \r\n     */\r\n    public static getScreenToWorld(vec2: Vec2, vec3: Vec3, lv: number = 0.5) {\r\n\r\n        tmpV3.set(vec2.x, vec2.y, lv);\r\n        return GlobalConst.camera.screenToWorld(tmpV3, vec3);\r\n    }\r\n\r\n    /**\r\n     * 获取点击地图上的点位\r\n     * @param vec2 屏幕坐标\r\n     * @param out 点击的地图世界坐标\r\n     * @returns 是否点击到\r\n     */\r\n    public static calculateHitPoint(vec2: Vec2, out:Vec3) {\r\n        return GlobalConst.mapPanel.calculateHitPoint(vec2 ,out);\r\n    }\r\n\r\n\r\n    public static createSphere(parent: Node, radius: number, pos: Vec3) : Node{\r\n        return;\r\n        let node = new Node(\"Test球\");\r\n        node.parent = parent;\r\n        node.setPosition(pos);\r\n\r\n        let mesh = new Primitive(Primitive.PrimitiveType.SPHERE);\r\n\r\n        //@ts-ignore\r\n        mesh.info = radius;\r\n        mesh.onLoaded();\r\n        let meshRender = node.addComponent(MeshRenderer);\r\n        meshRender.mesh = mesh;\r\n\r\n\r\n        meshRender.material = material;\r\n\r\n\r\n        node.layer = parent.layer;\r\n        return node;\r\n        // node.setScale(radius, radius, radius);\r\n    }\r\n\r\n}\r\n"]}