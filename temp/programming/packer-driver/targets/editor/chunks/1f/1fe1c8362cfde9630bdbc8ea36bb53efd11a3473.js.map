{"version":3,"sources":["file:///D:/cocos_work/SimulateCity/assets/src/operate/MapOperateLogic.ts"],"names":["MapOperateLogic","Vec2","Vec3","misc","GlobalConst","v2_1","v2_2","v2_3","v2_4","v3_1","v3_2","CameraControllerComp","MsgEvent","Msg","Util","lv","rotaWheelSpeed","touchDir","_continueMoveDirty","onTouchStart","e","interruptMapOp","console","warn","touches","getAllTouches","test","getLocation","length","selectBuilding","emit","OP_RESET_CLICK_POINT","onTouchMove","getPreviousLocation","disPre","distance","subtract","angle","radiansToDegrees","signAngle","preY","getDelta","y","curY","disCur","scale","rota","Math","min","max","set","OP_TOUCH_SCALE","OP_TOUCH_ROTA","getScreenToWorld","x","z","OP_TOUCH_MOVE","OP_TOUCH_MOVE_MAP","onTouchEnd"],"mappings":"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","sourcesContent":["import { EventTouch, Vec2, Vec3, misc } from \"cc\";\r\nimport { IOperateHandler } from \"./IOperateLogic\";\r\nimport { GlobalConst, v2_1, v2_2, v2_3, v2_4, v3_1, v3_2 } from \"../GlobalConst\";\r\nimport { CameraControllerComp } from \"../component/mapOp/CameraControllerComp\";\r\nimport { MsgEvent } from \"../msg/MsgEvent\";\r\nimport { Msg } from \"../msg/msg\";\r\nimport { Util } from \"../framework/util\";\r\n\r\nconst lv = 0.05;\r\n\r\nexport class MapOperateLogic implements IOperateHandler {\r\n\r\n    // 滚轮缩放的速度\r\n    rotaWheelSpeed: number = 0.1;\r\n\r\n    // 手指滑动方向\r\n    touchDir: Vec2 = new Vec2();\r\n\r\n    private _continueMoveDirty: boolean = false;\r\n    onTouchStart(e: EventTouch) {\r\n        if (GlobalConst.interruptMapOp) return console.warn(\"中断操作中...............\");\r\n        // if (game.canvas.requestPointerLock) { game.canvas.requestPointerLock(); }\r\n        this._continueMoveDirty = false;\r\n        const touches = e.getAllTouches();\r\n\r\n        CameraControllerComp.test(e.getLocation());\r\n        if (touches.length > 1) {\r\n            GlobalConst.selectBuilding = false;\r\n        } else {\r\n            touches[0].getLocation(v2_2);\r\n            Msg.emit(MsgEvent.OP_RESET_CLICK_POINT, v2_2);\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: EventTouch) {\r\n        if (GlobalConst.interruptMapOp) return console.warn(\"中断操作中...............\");\r\n        const touches = e.getAllTouches();\r\n        if (touches.length > 1) {\r\n            GlobalConst.selectBuilding = false;\r\n            touches[0].getPreviousLocation(v2_1);\r\n            touches[1].getPreviousLocation(v2_2);\r\n\r\n\r\n            let disPre = Vec2.distance(v2_1, v2_2);\r\n            Vec2.subtract(v2_3, v2_2, v2_1);\r\n\r\n            touches[0].getPreviousLocation(v2_4).subtract(touches[1].getPreviousLocation(v2_1));\r\n            touches[0].getLocation(v2_1).subtract(touches[1].getLocation(v2_2));\r\n            let angle = misc.radiansToDegrees(v2_4.signAngle(v2_1));// y轴旋转\r\n\r\n            let preY = touches[0].getDelta(v2_2).y;\r\n            let curY = touches[1].getDelta(v2_1).y;\r\n\r\n            touches[0].getLocation(v2_1);\r\n            touches[1].getLocation(v2_2);\r\n            let disCur = Vec2.distance(v2_1, v2_2);\r\n            \r\n            let scale = 0;\r\n            let rota = 0;\r\n            if (curY > 0 && preY > 0) {\r\n                rota = Math.min(curY, preY);\r\n            } else if (curY < 0 && preY < 0) {\r\n                rota = Math.max(curY, preY);\r\n            }\r\n            scale = disPre - disCur;\r\n\r\n\r\n            v2_2.set(rota, -angle);\r\n            Msg.emit(MsgEvent.OP_TOUCH_SCALE, scale * 0.1);\r\n            Msg.emit(MsgEvent.OP_TOUCH_ROTA, v2_2);\r\n            // Log.log(\"on touch move:realAngle---> \", angle, v2_4.x, v2_4.y);\r\n        } else {\r\n            if (this._continueMoveDirty) {\r\n                this._continueMoveDirty = false;\r\n                return;\r\n            }\r\n            touches[0].getPreviousLocation(v2_1);\r\n            Util.getScreenToWorld(v2_1, v3_1, lv);\r\n\r\n\r\n            touches[0].getLocation(v2_2);\r\n            Util.getScreenToWorld(v2_2, v3_2, lv);\r\n\r\n            Vec3.subtract(v3_2, v3_1, v3_2);\r\n            v2_1.set(v3_2.x, v3_2.z);\r\n\r\n            Msg.emit(MsgEvent.OP_TOUCH_MOVE, v2_1);\r\n            Msg.emit(MsgEvent.OP_TOUCH_MOVE_MAP, v2_2);\r\n            \r\n        }\r\n    }\r\n\r\n    onTouchEnd(e: EventTouch): any {\r\n        if (GlobalConst.interruptMapOp) {\r\n            console.warn(\"中断操作中...............\")\r\n            return;\r\n        }\r\n        // if (document.exitPointerLock) { document.exitPointerLock(); }\r\n        const touches = e.getAllTouches();\r\n        // console.log(\"onTouchEnd:-->\" + touches.length);\r\n        if(touches.length >= 1){ // 重置记录触屏点，更新射线检测点，这样双指操作中抬起一个手指不会导致屏幕移动           \r\n            touches[0].getLocation(v2_2);\r\n            Msg.emit(MsgEvent.OP_RESET_CLICK_POINT, v2_2);\r\n            Util.getScreenToWorld(v2_2, v3_2, lv);\r\n            Msg.emit(MsgEvent.OP_TOUCH_MOVE_MAP, v2_2);\r\n        }\r\n\r\n        this._continueMoveDirty = true;\r\n        Msg.emit(MsgEvent.OP_TOUCH_MOVE, v2_1.set(0, 0));\r\n    }\r\n\r\n}"]}