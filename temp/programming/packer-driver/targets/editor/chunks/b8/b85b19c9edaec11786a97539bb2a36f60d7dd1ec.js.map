{"version":3,"sources":["file:///D:/cocos_work/games/SimulateCity/assets/src/msg/msg.ts"],"names":["Msg","on","key","fun","_map","push","bind","target","off","index","indexOf","splice","emit","data","info","forEach","item"],"mappings":";;;kEAKaA,G;;;;;;;;;;;;;;;;;AAHb;AACA;AACA;qBACaA,G,GAAN,MAAMA,GAAN,CAAa;AAIA,eAAFC,EAAE,CAAEC,GAAF,EAAeC,GAAf,EAA+C;AAC3D,cAAI,CAAC,KAAKC,IAAL,CAAUF,GAAV,CAAL,EAAqB;AACjB,iBAAKE,IAAL,CAAUF,GAAV,IAAiB,EAAjB;AACH;;AACD,eAAKE,IAAL,CAAUF,GAAV,EAAeG,IAAf,CAAoBF,GAApB;AACH;;AAEiB,eAAJG,IAAI,CAAEJ,GAAF,EAAeC,GAAf,EAAyCI,MAAzC,EAA4D;AAE1EJ,UAAAA,GAAG,GAAGA,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAN;;AAEA,cAAI,CAAC,KAAKH,IAAL,CAAUF,GAAV,CAAL,EAAqB;AACjB,iBAAKE,IAAL,CAAUF,GAAV,IAAiB,EAAjB;AACH;;AACD,eAAKE,IAAL,CAAUF,GAAV,EAAeG,IAAf,CAAoBF,GAApB;AACH;;AAGgB,eAAHK,GAAG,CAAEN,GAAF,EAAeC,GAAf,EAAgD;AAC7D,cAAIA,GAAG,KAAK,IAAZ,EAAkB;AACd,iBAAKC,IAAL,CAAUF,GAAV,IAAiB,EAAjB;AACH,WAFD,MAEO;AACH,kBAAMO,KAAa,GAAG,KAAKL,IAAL,CAAUF,GAAV,EAAeQ,OAAf,CAAuBP,GAAvB,CAAtB;;AACA,iBAAKC,IAAL,CAAUF,GAAV,EAAeS,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACH;AACJ;;AAEiB,eAAJG,IAAI,CAAEV,GAAF,EAAeW,IAAf,EAAiC;AAC/C,gBAAMC,IAAI,GAAG,KAAKV,IAAL,CAAUF,GAAV,CAAb;;AACA,cAAIY,IAAJ,EAAU;AACNA,YAAAA,IAAI,CAACC,OAAL,CAAaC,IAAI,IAAI;AACjBA,cAAAA,IAAI,CAACH,IAAD,CAAJ;AACH,aAFD;AAGH,WAJD,MAIO,CACH;AACH;AACJ;;AAxCe,O;;AAAPb,MAAAA,G,CAEMI,I,GAAsC,E","sourcesContent":["import { Vec3 } from \"cc\";\n\n/**\n * Msg\n */\nexport class Msg<T> {\n\n    private static _map: { [key: string]: Function[] } = {};\n\n    public static on (key: string, fun: (data: any) => void): void {\n        if (!this._map[key]) {\n            this._map[key] = []\n        }\n        this._map[key].push(fun);\n    }\n\n    public static bind (key: string, fun: (data: any) => void, target:any ): void {\n\n        fun = fun.bind(target);\n\n        if (!this._map[key]) {\n            this._map[key] = []\n        }\n        this._map[key].push(fun);\n    }\n\n\n    public static off (key: string, fun?: (data: any) => void): void {\n        if (fun === null) {\n            this._map[key] = []\n        } else {\n            const index: number = this._map[key].indexOf(fun);\n            this._map[key].splice(index, 1);\n        }\n    }\n\n    public static emit (key: string, data?: any): void {\n        const info = this._map[key];\n        if (info) {\n            info.forEach(item => {\n                item(data);\n            })\n        } else {\n            //console.warn('Not register key:' + key);\n        }\n    }\n\n}\n"]}