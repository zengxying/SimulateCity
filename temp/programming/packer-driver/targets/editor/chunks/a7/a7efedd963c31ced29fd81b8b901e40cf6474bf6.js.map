{"version":3,"sources":["file:///D:/cocos_work/games/SimulateCity/assets/src/component/CameraControllerComp.ts"],"names":["_decorator","CameraComponent","Component","Quat","Vec2","Vec3","GlobalConst","v3_1","Msg","MsgEvent","Log","ccclass","property","v2_1","v2_2","qt_1","forward","right","CameraControllerComp","slide","range","_camera","_velocity","_position","_speedScale","distanceZ","_rotation","onLoad","ins","camera","node","getComponentInChildren","copy","getPosition","rotation","onEnable","on","OP_TOUCH_MOVE","moveView","bind","OP_TOUCH_SCALE","scaleView","onDisable","off","OP_TOUCH_ROTA","start","vec2","console","log","x","y","scale","z","multiplyScalar","set","moveView2","test","speed","Math","abs","transformQuat","UNIT_Z","scaleAndAdd","position","rotaView","rotateAround","update","dt","t","min","damp","moveSpeed","lerp","setPosition","moveDir","cameraMoveDir","lengthSqr","FORWARD","normalize","cross","UP","slerp"],"mappings":"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","sourcesContent":["import { _decorator, Camera, CameraComponent, Component, director, EventTouch, game, Node, Quat, sp, Vec2, Vec3 } from 'cc';\r\nimport { GlobalConst, v3_1, v3_2 } from '../GlobalConst';\r\nimport { Msg } from '../msg/msg';\r\nimport { MsgEvent } from '../msg/MsgEvent';\r\nimport { Log } from '../framework/Log';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst v2_1 = new Vec2();\r\nconst v2_2 = new Vec2();\r\n\r\n\r\nconst qt_1 = new Quat();\r\nconst forward = new Vec3();\r\nconst right = new Vec3();\r\n\r\n@ccclass('CameraControllerComp')\r\nexport class CameraControllerComp extends Component {\r\n\r\n    private _camera: CameraComponent;\r\n\r\n    @property\r\n    public moveSpeed = 1;\r\n\r\n    @property\r\n    public moveSpeedShiftScale = 5;\r\n\r\n    @property({ slide: true, range: [0.05, 0.5, 0.01] })\r\n    public damp = 0.2;\r\n\r\n    @property\r\n    public rotateSpeed = 1;\r\n\r\n    private _velocity = new Vec3();\r\n    private _position = new Vec3();\r\n    private _speedScale = 1;\r\n\r\n    distanceZ: number = 200;\r\n    private _rotation: Quat = new Quat();\r\n\r\n    // 移动  单指\r\n\r\n    // 旋转  双指\r\n    // 缩放\r\n\r\n    // 边界\r\n    // 数据区间\r\n\r\n    // 插值运算\r\n\r\n    protected onLoad(): void {\r\n        CameraControllerComp.ins = this;\r\n        CameraControllerComp.camera = this._camera = this.node.getComponentInChildren(CameraComponent);\r\n        Vec3.copy(this._position, this.node.getPosition());\r\n        Quat.copy(this._rotation,  this._camera.node.rotation);\r\n\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        Msg.on(MsgEvent.OP_TOUCH_MOVE, this.moveView.bind(this));\r\n        // Msg.on(MsgEvent.OP_TOUCH_ROTA, this.rotaView.bind(this));\r\n        Msg.on(MsgEvent.OP_TOUCH_SCALE, this.scaleView.bind(this));\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        Msg.off(MsgEvent.OP_TOUCH_MOVE);\r\n        Msg.off(MsgEvent.OP_TOUCH_ROTA);\r\n        Msg.off(MsgEvent.OP_TOUCH_SCALE);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n\r\n    /** 移动 */\r\n    public moveView(vec2:Vec2) {\r\n        console.log(\"转换出来的坐标:vec2 vec2\", vec2.x, vec2.y);\r\n        const scale = 1 + this._position.z / this.distanceZ * 10;\r\n        vec2.multiplyScalar(scale);\r\n        this._velocity.set(vec2.x, 0, vec2.y);\r\n        // this._camera.screenToWorld(this._velocity,this._velocity);\r\n        // Vec3.subtract(this._velocity, this._velocity, this._position);\r\n    }\r\n\r\n    /** 移动 */\r\n    public moveView2(vec2:Vec2) {\r\n        console.log(\"转换出来的坐标:vec2 vec2\", vec2.x, vec2.y);\r\n        const scale = 1 + this._position.z / this.distanceZ * 10;\r\n        vec2.multiplyScalar(scale);\r\n        this._velocity.set(vec2.x, 0, vec2.y);\r\n        // this._camera.screenToWorld(this._velocity,this._velocity);\r\n        // Vec3.subtract(this._velocity, this._velocity, this._position);\r\n    }\r\n\r\n    public static ins:CameraControllerComp;\r\n    public static camera:Camera;\r\n    public static test(vec2:Vec2){\r\n\r\n        // console.log(\"转换出来的坐标:vec2 vec2\", vec2.x, vec2.y);\r\n        // v3_2.set(vec2.x, vec2.y, 0);\r\n        // this.ins._camera.screenToWorld(v3_2,v3_1);\r\n        // console.log(\"转换出来的坐标:\", v3_1.x, v3_1.y, v3_1.z);\r\n    }\r\n\r\n    /** 缩放 */\r\n    public scaleView(speed: number) {\r\n        Log.log(\"scaleView -- speed:\"+speed);\r\n        if(Math.abs(this._position.z + speed) < this.distanceZ){\r\n            Vec3.transformQuat(v3_1, Vec3.UNIT_Z, this._camera.node.rotation);\r\n            Vec3.scaleAndAdd(this._position, this.node.position, v3_1, speed);\r\n        }\r\n    }\r\n\r\n    /** 旋转 */\r\n    public rotaView(vec2: Vec2) { // 旋转看着像是地图的旋转\r\n        \r\n        let x = vec2.x;\r\n        let y = vec2.y;\r\n        \r\n        Quat.rotateAround(this._rotation, this._rotation, this._camera.node.forward, y);\r\n        Quat.rotateAround(this._rotation, this._rotation, this._camera.node.right, x);\r\n        // if (this._eulerP.x + x < -30 && this._eulerP.x + x > -90) { // x处角度的旋转限制 测试使用\r\n        //     this._eulerP.x += x;\r\n        // }\r\n        // this._eulerP.y += y;\r\n    }\r\n\r\n    public update(dt: number) {\r\n        const t = Math.min(dt / this.damp, 1);\r\n        // position\r\n        Vec3.transformQuat(v3_1, this._velocity, this.node.rotation);\r\n        Vec3.scaleAndAdd(this._position, this._position, v3_1, this.moveSpeed * this._speedScale);\r\n        Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\r\n        this.node.setPosition(v3_1);\r\n        const moveDir = GlobalConst.cameraMoveDir;\r\n        if (moveDir.lengthSqr()) {\r\n            Vec3.transformQuat(forward, Vec3.FORWARD, this.node.rotation);\r\n            forward.normalize();\r\n            Vec3.cross(right, forward, Vec3.UP);\r\n            right.normalize();\r\n\r\n            Vec3.scaleAndAdd(this._position, this._position, forward, this.moveSpeed * this._speedScale * moveDir.z);\r\n            Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\r\n            this.node.setPosition(v3_1);\r\n\r\n            Vec3.scaleAndAdd(this._position, this._position, right, this.moveSpeed * this._speedScale * moveDir.x);\r\n            Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\r\n            this.node.setPosition(v3_1);\r\n\r\n            Vec3.scaleAndAdd(this._position, this._position, Vec3.UP, this.moveSpeed * this._speedScale * moveDir.y);\r\n            Vec3.lerp(v3_1, this.node.getPosition(), this._position, t);\r\n            this.node.setPosition(v3_1);\r\n        }\r\n\r\n        // rotation\r\n        Quat.slerp(qt_1, this._camera.node.rotation, this._rotation, t);\r\n        this._camera.node.rotation = qt_1;\r\n        this._velocity.set();\r\n    }\r\n}\r\n\r\n\r\n"]}