{"version":3,"sources":["file:///D:/cocos_work/SimulateCity/assets/src/framework/storageManager.ts"],"names":["_decorator","sys","log","native","Util","Log","ccclass","property","StorageManager","_jsonData","_path","_markSave","_saveTimer","instance","_instance","start","_getConfigPath","content","isNative","valueObject","fileUtils","getValueMapFromFile","KEY_CONFIG","localStorage","getItem","length","startsWith","substring","decrypt","jsonData","JSON","parse","excepaiton","setInterval","scheduleSave","setConfigDataWithoutSave","key","value","account","userId","console","error","setConfigData","getConfigData","setGlobalData","issave","save","getGlobalData","setUserId","getUserId","markModified","str","stringify","zipStr","encrypt","ls","setItem","valueObj","writeToFile","platform","path","OS","WINDOWS","LINUX","getWritablePath"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,M,OAAAA,M;;AACtBC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,G,iBAAAA,G;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;gCAGjBQ,c,WADZF,OAAO,CAAC,gBAAD,C,2BAAR,MACaE,cADb,CAC4B;AAAA;AAAA,eAahBC,SAbgB,GAakB,EAblB;AAAA,eAchBC,KAdgB,GAcH,IAdG;AAAA,eAgBhBC,SAhBgB,GAgBK,KAhBL;AAAA,eAiBhBC,UAjBgB,GAiBK,CAAC,CAjBN;AAAA;;AAGE,mBAARC,QAAQ,GAAI;AAC1B,cAAI,KAAKC,SAAT,EAAoB;AAChB,mBAAO,KAAKA,SAAZ;AACH;;AAED,eAAKA,SAAL,GAAiB,IAAIN,cAAJ,EAAjB;;AACA,eAAKM,SAAL,CAAeC,KAAf;;AACA,iBAAO,KAAKD,SAAZ;AACH;;AAQDC,QAAAA,KAAK,GAAI;AACL,eAAKN,SAAL,GAAiB;AACb,sBAAU;AADG,WAAjB;AAIA,eAAKC,KAAL,GAAa,KAAKM,cAAL,EAAb;AAEA,cAAIC,OAAJ;;AACA,cAAIhB,GAAG,CAACiB,QAAR,EAAkB;AACd,gBAAIC,WAAW,GAAGhB,MAAM,CAACiB,SAAP,CAAiBC,mBAAjB,CAAqC,KAAKX,KAA1C,CAAlB;AACAO,YAAAA,OAAO,GAAGE,WAAW,CAACX,cAAc,CAACc,UAAhB,CAArB;AACH,WAHD,MAGO;AACHL,YAAAA,OAAO,GAAGhB,GAAG,CAACsB,YAAJ,CAAiBC,OAAjB,CAAyBhB,cAAc,CAACc,UAAxC,CAAV;AACH,WAbI,CAeL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,cAAIL,OAAO,IAAIA,OAAO,CAACQ,MAAvB,EAA+B;AAC3B,gBAAIR,OAAO,CAACS,UAAR,CAAmB,GAAnB,CAAJ,EAA6B;AACzBT,cAAAA,OAAO,GAAGA,OAAO,CAACU,SAAR,CAAkB,CAAlB,CAAV;AACAV,cAAAA,OAAO,GAAG;AAAA;AAAA,gCAAKW,OAAL,CAAaX,OAAb,CAAV;AACH;;AAED,gBAAI;AACA;AACA,kBAAIY,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWd,OAAX,CAAf;AACA,mBAAKR,SAAL,GAAiBoB,QAAjB;AACH,aAJD,CAIE,OAAOG,UAAP,EAAmB,CAEpB;AAEJ,WArCI,CAuCL;AACA;AACA;AACA;AAEA;;;AACA,eAAKpB,UAAL,GAAkBqB,WAAW,CAAC,MAAM;AAChC,iBAAKC,YAAL;AACH,WAF4B,EAE1B,IAF0B,CAA7B;AAIH;AAED;AACJ;AACA;AACA;AACA;;;AACIC,QAAAA,wBAAwB,CAAEC,GAAF,EAAeC,KAAf,EAA2B;AAC/C,cAAIC,OAAe,GAAG,KAAK7B,SAAL,CAAe8B,MAArC;;AACA,cAAI,KAAK9B,SAAL,CAAe6B,OAAf,CAAJ,EAA6B;AACzB,iBAAK7B,SAAL,CAAe6B,OAAf,EAAwBF,GAAxB,IAA+BC,KAA/B;AACH,WAFD,MAEO;AACHG,YAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACIC,QAAAA,aAAa,CAAEN,GAAF,EAAeC,KAAf,EAA2B;AACpC,eAAKF,wBAAL,CAA8BC,GAA9B,EAAmCC,KAAnC;AACA,eAAK1B,SAAL,GAAiB,IAAjB,CAFoC,CAEb;AAC1B;AAED;AACJ;AACA;AACA;AACA;;;AACIgC,QAAAA,aAAa,CAAEP,GAAF,EAAe;AACxB,cAAIE,OAAe,GAAG,KAAK7B,SAAL,CAAe8B,MAArC;;AACA,cAAI,KAAK9B,SAAL,CAAe6B,OAAf,CAAJ,EAA6B;AACzB,gBAAID,KAAK,GAAG,KAAK5B,SAAL,CAAe6B,OAAf,EAAwBF,GAAxB,CAAZ;AACA,mBAAOC,KAAK,GAAGA,KAAH,GAAW,EAAvB;AACH,WAHD,MAGO;AACHnC,YAAAA,GAAG,CAAC,yBAAD,CAAH;AACA,mBAAO,EAAP;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACW0C,QAAAA,aAAa,CAAER,GAAF,EAAcC,KAAd,EAA0BQ,MAA1B,EAA2C;AAC3D,cAAG,KAAKpC,SAAL,CAAe2B,GAAf,KAAuBC,KAA1B,EAAgC;AAC5B,mBAAO;AAAA;AAAA,4BAAInC,GAAJ,CAAQ,SAAR,CAAP;AACH;;AACD,eAAKO,SAAL,CAAe2B,GAAf,IAAsBC,KAAtB;;AACA,cAAGQ,MAAH,EAAU;AACN,iBAAKC,IAAL;AACH,WAFD,MAEK;AACD,iBAAKnC,SAAL,GAAiB,IAAjB;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACWoC,QAAAA,aAAa,CAAEX,GAAF,EAAc;AAC9B,iBAAO,KAAK3B,SAAL,CAAe2B,GAAf,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACWY,QAAAA,SAAS,CAAET,MAAF,EAAiB;AAC7B,eAAK9B,SAAL,CAAe8B,MAAf,GAAwBA,MAAxB;;AACA,cAAI,CAAC,KAAK9B,SAAL,CAAe8B,MAAf,CAAL,EAA6B;AACzB,iBAAK9B,SAAL,CAAe8B,MAAf,IAAyB,EAAzB;AACH;;AAED,eAAKO,IAAL;AACH;AAED;AACJ;AACA;AACA;;;AACWG,QAAAA,SAAS,GAAI;AAChB,iBAAO,KAAKxC,SAAL,CAAe8B,MAAtB;AACH;AAED;AACJ;AACA;AACA;;;AACWL,QAAAA,YAAY,GAAI;AACnB,cAAI,CAAC,KAAKvB,SAAV,EAAqB;AACjB;AACH;;AAED,eAAKmC,IAAL;AACH;AAED;AACJ;AACA;;;AACWI,QAAAA,YAAY,GAAI;AACnB,eAAKvC,SAAL,GAAiB,IAAjB;AACH;AAED;AACJ;AACA;AACA;;;AACWmC,QAAAA,IAAI,GAAI;AACX;AACA,cAAIK,GAAG,GAAGrB,IAAI,CAACsB,SAAL,CAAe,KAAK3C,SAApB,CAAV,CAFW,CAIX;AACA;AACA;AACA;;AAEA,cAAI4C,MAAM,GAAG,MAAM;AAAA;AAAA,4BAAKC,OAAL,CAAaH,GAAb,CAAnB,CATW,CAUX;;AAEA,eAAKxC,SAAL,GAAiB,KAAjB;;AAEA,cAAI,CAACV,GAAG,CAACiB,QAAT,EAAmB;AACf,gBAAIqC,EAAE,GAAGtD,GAAG,CAACsB,YAAb;AACAgC,YAAAA,EAAE,CAACC,OAAH,CAAWhD,cAAc,CAACc,UAA1B,EAAsC+B,MAAtC;AACA;AACH;;AAED,cAAII,QAAa,GAAG,EAApB;AACAA,UAAAA,QAAQ,CAACjD,cAAc,CAACc,UAAhB,CAAR,GAAsC+B,MAAtC;AACAlD,UAAAA,MAAM,CAACiB,SAAP,CAAiBsC,WAAjB,CAA6BD,QAA7B,EAtBW,CAuBX;AACH;AAED;AACJ;AACA;AACA;;;AACYzC,QAAAA,cAAc,GAAI;AAEtB,cAAI2C,QAAa,GAAG1D,GAAG,CAAC0D,QAAxB;AAEA,cAAIC,IAAY,GAAG,EAAnB;;AAEA,cAAID,QAAQ,KAAK1D,GAAG,CAAC4D,EAAJ,CAAOC,OAAxB,EAAiC;AAC7BF,YAAAA,IAAI,GAAG,UAAP;AACH,WAFD,MAEO,IAAID,QAAQ,KAAK1D,GAAG,CAAC4D,EAAJ,CAAOE,KAAxB,EAA+B;AAClCH,YAAAA,IAAI,GAAG,QAAP;AACH,WAFM,MAEA;AACH,gBAAI3D,GAAG,CAACiB,QAAR,EAAkB;AACd0C,cAAAA,IAAI,GAAGzD,MAAM,CAACiB,SAAP,CAAiB4C,eAAjB,EAAP;AACAJ,cAAAA,IAAI,GAAGA,IAAI,GAAG,MAAd;AACH,aAHD,MAGO;AACHA,cAAAA,IAAI,GAAG,UAAP;AACH;AACJ;;AAED,iBAAOA,IAAP;AACH;;AAzOuB,O,UACT9C,S,mBAcDQ,U,GAAqB,U","sourcesContent":["import { _decorator, sys, log, native } from \"cc\";\r\nimport { Util } from './util';\r\nimport { Log } from \"./Log\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"StorageManager\")\r\nexport class StorageManager {\r\n    private static _instance: StorageManager;\r\n\r\n    public static get instance () {\r\n        if (this._instance) {\r\n            return this._instance;\r\n        }\r\n\r\n        this._instance = new StorageManager();\r\n        this._instance.start();\r\n        return this._instance;\r\n    }\r\n\r\n    private _jsonData: {[key: string]: any} = {};\r\n    private _path: any = null;\r\n    public static KEY_CONFIG: string = 'template';\r\n    private _markSave: boolean = false;\r\n    private _saveTimer: number = -1;\r\n\r\n    start () {\r\n        this._jsonData = {\r\n            \"userId\": \"\",\r\n        };\r\n\r\n        this._path = this._getConfigPath();\r\n\r\n        let content;\r\n        if (sys.isNative) {\r\n            let valueObject = native.fileUtils.getValueMapFromFile(this._path);\r\n            content = valueObject[StorageManager.KEY_CONFIG];\r\n        } else {\r\n            content = sys.localStorage.getItem(StorageManager.KEY_CONFIG);\r\n        }\r\n\r\n        // // 解密代码\r\n        // if (cc.game.config[\"encript\"]) {\r\n        //     var newContent = new Xxtea(\"upgradeHeroAbility\").xxteaDecrypt(content);\r\n        //     if (newContent && newContent.length > 0) {\r\n        //         content = newContent;\r\n        //     }\r\n        // }\r\n\r\n        if (content && content.length) {\r\n            if (content.startsWith('@')) {\r\n                content = content.substring(1);\r\n                content = Util.decrypt(content);\r\n            }\r\n\r\n            try {\r\n                // 初始化操作\r\n                let jsonData = JSON.parse(content);\r\n                this._jsonData = jsonData;\r\n            } catch (excepaiton) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // 启动无限定时器，每1秒保存一次数据，而不是无限保存数据\r\n        // this._saveTimer = setInterval(() =>{\r\n        //     this.scheduleSave();\r\n        // }, 500);\r\n\r\n        // 每隔5秒保存一次数据，主要是为了保存最新在线时间，方便离线奖励时间判定\r\n        this._saveTimer = setInterval(() => {\r\n            this.scheduleSave();\r\n        }, 5000);\r\n\r\n    }\r\n\r\n    /**\r\n     * 存储配置文件，不保存到本地\r\n     * @param {string}key  关键字\r\n     * @param {any}value  存储值\r\n     */\r\n    setConfigDataWithoutSave (key: string, value: any) {\r\n        let account: string = this._jsonData.userId;\r\n        if (this._jsonData[account]) {\r\n            this._jsonData[account][key] = value;\r\n        } else {\r\n            console.error(\"no account can not save\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 存储配置文件，保存到本地\r\n     * @param {string}key  关键字\r\n     * @param {any}value  存储值\r\n     */\r\n    setConfigData (key: string, value: any) {\r\n        this.setConfigDataWithoutSave(key, value);\r\n        this._markSave = true; // 标记为需要存储，避免一直在写入，而是每隔一段时间进行写入\r\n    }\r\n\r\n    /**\r\n     * 根据关键字获取数值\r\n     * @param {string} key 关键字\r\n     * @returns\r\n     */\r\n    getConfigData (key: string) {\r\n        let account: string = this._jsonData.userId;\r\n        if (this._jsonData[account]) {\r\n            let value = this._jsonData[account][key];\r\n            return value ? value : \"\";\r\n        } else {\r\n            log(\"no account can not load\");\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置全局数据\r\n     * @param {string} key 关键字\r\n     * @param {any}value  存储值\r\n     * @returns\r\n     */\r\n    public setGlobalData (key:string, value: any, issave?:boolean) {\r\n        if(this._jsonData[key] == value){\r\n            return Log.log(\"有相同的数据了\");\r\n        }\r\n        this._jsonData[key] = value;\r\n        if(issave){\r\n            this.save();\r\n        }else{\r\n            this._markSave = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取全局数据\r\n     * @param {string} key 关键字\r\n     * @returns\r\n     */\r\n    public getGlobalData (key:string) {\r\n        return this._jsonData[key];\r\n    }\r\n\r\n    /**\r\n     * 设置用户唯一标示符\r\n     * @param {string} userId 用户唯一标示符\r\n     * @param {any}value  存储值\r\n     * @returns\r\n     */\r\n    public setUserId (userId:string) {\r\n        this._jsonData.userId = userId;\r\n        if (!this._jsonData[userId]) {\r\n            this._jsonData[userId] = {};\r\n        }\r\n\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * 获取用户唯一标示符\r\n     * @returns {string}\r\n     */\r\n    public getUserId () {\r\n        return this._jsonData.userId;\r\n    }\r\n\r\n    /**\r\n     * 定时存储\r\n     * @returns\r\n     */\r\n    public scheduleSave () {\r\n        if (!this._markSave) {\r\n            return;\r\n        }\r\n\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * 标记为已修改\r\n     */\r\n    public markModified () {\r\n        this._markSave = true;\r\n    }\r\n\r\n    /**\r\n     * 保存配置文件\r\n     * @returns\r\n     */\r\n    public save () {\r\n        // 写入文件\r\n        let str = JSON.stringify(this._jsonData);\r\n\r\n        // // 加密代码\r\n        // if (cc.game.config[\"encript\"]) {\r\n        //     str = new Xxtea(\"upgradeHeroAbility\").xxteaEncrypt(str);\r\n        // }\r\n\r\n        let zipStr = '@' + Util.encrypt(str);\r\n        // let zipStr = str;\r\n\r\n        this._markSave = false;\r\n\r\n        if (!sys.isNative) {\r\n            let ls = sys.localStorage;\r\n            ls.setItem(StorageManager.KEY_CONFIG, zipStr);\r\n            return;\r\n        }\r\n\r\n        let valueObj: any = {};\r\n        valueObj[StorageManager.KEY_CONFIG] = zipStr;\r\n        native.fileUtils.writeToFile(valueObj);\r\n        // jsb.fileUtils.writeToFile(valueObj);\r\n    }\r\n\r\n    /**\r\n     * 获取配置文件路径\r\n     * @returns 获取配置文件路径\r\n     */\r\n    private _getConfigPath () {\r\n\r\n        let platform: any = sys.platform;\r\n\r\n        let path: string = \"\";\r\n\r\n        if (platform === sys.OS.WINDOWS) {\r\n            path = \"src/conf\";\r\n        } else if (platform === sys.OS.LINUX) {\r\n            path = \"./conf\";\r\n        } else {\r\n            if (sys.isNative) {\r\n                path = native.fileUtils.getWritablePath();\r\n                path = path + \"conf\";\r\n            } else {\r\n                path = \"src/conf\";\r\n            }\r\n        }\r\n\r\n        return path;\r\n    }\r\n}\r\n"]}