{"version":3,"sources":["file:///D:/cocos_work/SimulateCity/assets/src/operate/BuildingOperateLogic.ts"],"names":["BuildingOperateLogic","Vec2","v3","GlobalConst","v2_1","v2_2","v3_1","Util","BuildingOperateState","constructor","comp","target","_longTouchTime","_state","NONE","_startTouchPoint","_comp","createSphere","node","parent","onTouchStart","e","interruptBuildingOp","console","warn","touches","getAllTouches","_isSinglePoint","scheduleOnce","onLongTouch","bind","LONG_TOUCH_CHECK","getLocation","SHORT_TOUCH_RUNNING","error","LONG_TOUCH_RUNNING","mapPanel","getHitPointToGridPosition","setPosition","log","length","checkMoveBuild","onTouchMove","getDelta","lengthSqr","unschedule","onTouchEnd"],"mappings":"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","sourcesContent":["import { _decorator, Component, Quat, Vec2, Vec3, Input, game, EventTouch, Node, v3 } from 'cc';\r\nimport { GlobalConst, v2_1, v2_2, v3_1, v3_2 } from '../GlobalConst';\r\nimport { MsgEvent } from '../msg/MsgEvent';\r\nimport { Msg } from '../msg/msg';\r\nimport { IOperateHandler } from './IOperateLogic';\r\nimport { Util } from '../framework/util';\r\n\r\nenum BuildingOperateState {\r\n    NONE,\r\n    LONG_TOUCH_CHECK,\r\n    LONG_TOUCH_RUNNING,\r\n    SHORT_TOUCH_RUNNING,\r\n}\r\n\r\nexport class BuildingOperateLogic implements IOperateHandler {\r\n\r\n    private target: Node;\r\n    private _longTouchTime: number = 1;\r\n\r\n    private _state: BuildingOperateState = BuildingOperateState.NONE;\r\n    private _startTouchPoint: Vec2 = new Vec2();\r\n\r\n    _comp:Component;\r\n    constructor(comp:Component){\r\n        this._comp = comp;\r\n        this.target = Util.createSphere(this._comp.node.parent, 0.5, v3());\r\n    }\r\n\r\n\r\n    public onTouchStart(e: EventTouch) {\r\n        if (GlobalConst.interruptBuildingOp) return console.warn(\"中断操作中...............\");\r\n        // if (game.canvas.requestPointerLock) { game.canvas.requestPointerLock(); }\r\n        const touches = e.getAllTouches();\r\n        if (this._isSinglePoint(e)) {\r\n            this._comp.scheduleOnce(this.onLongTouch.bind(this), this._longTouchTime);\r\n            this._state = BuildingOperateState.LONG_TOUCH_CHECK;\r\n            touches[0].getLocation(this._startTouchPoint);\r\n        }\r\n    }\r\n\r\n    onLongTouch() {\r\n        if(this._state == BuildingOperateState.SHORT_TOUCH_RUNNING) {\r\n            console.error(\"失败 长按\");\r\n            return;\r\n        }\r\n        // 进入了拖动建筑物流程\r\n        this._state = BuildingOperateState.LONG_TOUCH_RUNNING;\r\n        GlobalConst.mapPanel.getHitPointToGridPosition(this._startTouchPoint, v3_1, v2_2);\r\n        this.target.setPosition(v3_1);\r\n        console.log(\"长按中....................\");\r\n    }\r\n\r\n    private _isSinglePoint(e: EventTouch) {\r\n        return e.getAllTouches().length <= 1;\r\n    }\r\n\r\n    public checkMoveBuild() :boolean{\r\n        return this._state == BuildingOperateState.LONG_TOUCH_RUNNING;\r\n    }\r\n\r\n    public onTouchMove(e: EventTouch) {\r\n        if (GlobalConst.interruptBuildingOp) return console.warn(\"中断操作中...............\");\r\n        const touches = e.getAllTouches();\r\n        if (this._isSinglePoint(e)) {\r\n\r\n            touches[0].getLocation(this._startTouchPoint);\r\n            e.getDelta(v2_1);\r\n            if (this._state == BuildingOperateState.LONG_TOUCH_CHECK && v2_1.lengthSqr() > 100) {\r\n                this._state = BuildingOperateState.SHORT_TOUCH_RUNNING;\r\n                this._comp.unschedule(this.onLongTouch);\r\n            }\r\n            if (this._state == BuildingOperateState.LONG_TOUCH_RUNNING) {\r\n                GlobalConst.mapPanel.getHitPointToGridPosition(this._startTouchPoint, v3_1, v2_2);\r\n                this.target.setPosition(v3_1);\r\n            }\r\n            if (this._state == BuildingOperateState.SHORT_TOUCH_RUNNING) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public onTouchEnd(e: EventTouch) {\r\n        this._state = BuildingOperateState.NONE;\r\n        if (GlobalConst.interruptBuildingOp) return console.warn(\"中断操作中...............\");\r\n        \r\n    }\r\n\r\n}"]}